<StatusBar
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:cvt="http://schemas.ruche-home.net/xaml/wpf/converters"
    xmlns:local="clr-namespace:ruche.mmd.tools"
    x:Class="ruche.mmd.tools.MikuMikuLipStatusBar">
    <StatusBar.DataContext>
        <local:MikuMikuLipConfigViewModel />
    </StatusBar.DataContext>
    <StatusBar.Resources>
        <Style x:Key="textStatus" TargetType="TextBlock">
            <Setter Property="Margin" Value="2,0,0,0" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style TargetType="Paragraph">
            <Setter Property="Margin" Value="0" />
        </Style>
        <Style TargetType="Image">
            <Setter Property="Stretch" Value="None" />
        </Style>

        <TextBlock
            x:Key="contentNull"
            Style="{StaticResource textStatus}"
            Text="&#10;" />
        <StackPanel x:Key="contentTrue" Orientation="Horizontal">
            <Image Source="/MikuMikuLipMakerCommon;component/resources/status_ok.png" />
            <TextBlock  Style="{StaticResource textStatus}">
                <Hyperlink
                    NavigateUri="{Binding LastSaveResult.DirectoryPath, Mode=OneWay}"
                    Command="{Binding LastDirectoryOpenCommand}"
                    ToolTip="保存先フォルダーを開く"
                    Foreground="DarkBlue">
                    <Hyperlink.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding LastDirectoryOpenCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/MikuMikuLipMakerCommon;component/resources/folder_open.png" />
                                </MenuItem.Icon>
                                <MenuItem.Header>
                                    <Bold>
                                        <AccessText Text="保存先フォルダーを開く(_O)" />
                                    </Bold>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator />
                            <MenuItem
                                Header="自動命名保存先の設定(_D)..."
                                Command="{Binding AutoNamingDirectoryCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/MikuMikuLipMakerCommon;component/resources/folder.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Hyperlink.ContextMenu>
                    <Run Text="{Binding LastSaveResult.FilePath, Mode=OneWay}" />
                </Hyperlink>
                <LineBreak />
                <Run Text="{Binding LastSaveResult.Text, Mode=OneWay}" />
            </TextBlock>
        </StackPanel>
        <StackPanel x:Key="contentFalse" Orientation="Horizontal">
            <Image Source="/MikuMikuLipMakerCommon;component/resources/status_ng.png" />
            <TextBlock Style="{StaticResource textStatus}">
                <Run Text="{Binding LastSaveResult.FilePath, Mode=OneWay}" />
                <LineBreak />
                <Run Text="{Binding LastSaveResult.Text, Mode=OneWay}" />
            </TextBlock>
        </StackPanel>
    </StatusBar.Resources>

    <StatusBar.Items>
        <StatusBarItem x:Name="status" Padding="5,3">
            <StatusBarItem.Style>
                <Style TargetType="StatusBarItem">
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding LastSaveResult.IsSucceeded}"
                            Value="{x:Null}">
                            <Setter
                                Property="Content"
                                Value="{StaticResource contentNull}" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding LastSaveResult.IsSucceeded}"
                            Value="True">
                            <Setter
                                Property="Content"
                                Value="{StaticResource contentTrue}" />
                            <Setter Property="Background" Value="PaleGreen" />
                            <Setter Property="Tag" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding LastSaveResult.IsSucceeded}"
                            Value="False">
                            <Setter
                                Property="Content"
                                Value="{StaticResource contentFalse}" />
                            <Setter Property="Background" Value="Pink" />
                            <Setter Property="Tag" Value="Violet" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StatusBarItem.Style>
            <i:Interaction.Triggers>
                <ei:PropertyChangedTrigger Binding="{Binding LastSaveResult}">
                    <i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition
                                    LeftOperand="{Binding Path=LastSaveResult.IsSucceeded}"
                                    Operator="NotEqual"
                                    RightOperand="{x:Null}" />
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>
                    <ei:ControlStoryboardAction>
                        <ei:ControlStoryboardAction.Storyboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.Target="{Binding ElementName=status}"
                                    Storyboard.TargetProperty="Background.Color"
                                    From="{Binding Tag, ElementName=status}"
                                    Duration="0:0:1">
                                    <ColorAnimation.EasingFunction>
                                        <SineEase />
                                    </ColorAnimation.EasingFunction>
                                </ColorAnimation>
                            </Storyboard>
                        </ei:ControlStoryboardAction.Storyboard>
                    </ei:ControlStoryboardAction>
                </ei:PropertyChangedTrigger>
            </i:Interaction.Triggers>
        </StatusBarItem>
    </StatusBar.Items>
</StatusBar>
