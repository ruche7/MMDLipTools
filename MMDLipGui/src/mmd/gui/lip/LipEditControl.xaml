<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:cvt="clr-namespace:ruche.wpf.converters"
    xmlns:local="clr-namespace:ruche.mmd.gui.lip"
    x:Class="ruche.mmd.gui.lip.LipEditControl"
    x:Name="root"
    DataContextChanged="OnDataContextChanged">
    <UserControl.DataContext>
        <local:LipEditControlViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MMDLipGui;component/resources/common.xaml" />
                <ResourceDictionary>
                    <Style x:Key="textAreaStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="AcceptsReturn" Value="True" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
                    </Style>

                    <cvt:BooleanVisibilityConverter x:Key="boolVisibiliyConv" />
                    <cvt:EnumValueDisplayConverter x:Key="enumDisplayConv" />

                    <ObjectDataProvider
                        x:Key="lipSpanRange"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:LipSpanRange" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider
                        x:Key="lipSpanUnit"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:LipSpanUnit" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- row 0 -->
        <Label
            Content="入力文(_I):"
            Target="{Binding ElementName=textInput}"
            Visibility="{Binding IsTextVisible, Converter={StaticResource boolVisibiliyConv}, ElementName=root}"
            Grid.Row="0" />

        <!-- row 1 -->
        <TextBox
            x:Name="textInput"
            Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
            Visibility="{Binding IsTextVisible, Converter={StaticResource boolVisibiliyConv}, ElementName=root}"
            Style="{StaticResource textAreaStyle}"
            Grid.Row="1" />

        <!-- row 2 -->
        <StackPanel
            Visibility="{Binding IsTextVisible, Converter={StaticResource boolVisibiliyConv}, ElementName=root}"
            Height="8"
            Grid.Row="2" />

        <!-- row 3 -->
        <WrapPanel
            Visibility="{Binding IsTextToLipKanaVisible, Converter={StaticResource boolVisibiliyConv}, ElementName=root}"
            Margin="0,0,0,8"
            Grid.Row="3">
            <Button Command="{Binding TextToLipKanaCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image
                        Source="/MMDLipGui;component/resources/arrow_up.png"
                        RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleY="-1" />
                        </Image.RenderTransform>
                    </Image>
                    <AccessText Text="入力文を読み仮名に変換(_T)" Margin="2,0,0,0" />
                </StackPanel>
            </Button>
            <CheckBox
                Content="自動変換(_A)"
                IsChecked="{Binding IsAutoLipKana}"
                Margin="8,0,0,0"
                VerticalAlignment="Center" />
        </WrapPanel>

        <!-- row 4 -->
        <Label
            Content="読み仮名(_K):"
            Target="{Binding ElementName=textLipKana}"
            Grid.Row="4" />

        <!-- row 5 -->
        <TextBox
            x:Name="textLipKana"
            Text="{Binding LipKana, UpdateSourceTrigger=PropertyChanged}"
            Style="{StaticResource textAreaStyle}"
            Grid.Row="5" />

        <!-- row 6 -->
        <Label
            Content="口パクデータ:"
            Target="{Binding ElementName=textLipSync}"
            Margin="0,4,0,0"
            Grid.Row="6" />

        <!-- row 7 -->
        <TextBox
            x:Name="textLipSync"
            Text="{Binding LipSyncText, Mode=OneWay}"
            Style="{StaticResource textAreaStyle}"
            IsReadOnly="True"
            Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
            Grid.Row="7" />

        <!-- row 8 -->
        <Grid Margin="0,8,0,0" Grid.Row="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Label
                Content="プリセット(_P):"
                Target="{Binding ElementName=comboPresets}"
                Grid.Column="0" />
            <ComboBox
                x:Name="comboPresets"
                ItemsSource="{Binding Presets}"
                SelectedIndex="{Binding SelectedPresetIndex}"
                DisplayMemberPath="Name"
                Margin="4,0,0,0"
                Grid.Column="1" />
            <Button
                Command="{Binding PresetsEditCommand}"
                Visibility="{Binding IsPresetsEditable, Converter={StaticResource boolVisibiliyConv}}"
                Margin="4,0,0,0"
                Grid.Column="2">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/MMDLipGui;component/resources/edit.png" />
                    <AccessText Text="編集(_E)..." Margin="2,0,0,0" />
                </StackPanel>
            </Button>
        </Grid>

        <!-- row 9 -->
        <WrapPanel Margin="0,4,0,0" Grid.Row="9">
            <Grid Margin="0,4,12,0">
                <Grid.Resources>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter
                                        Content="{Binding Converter={StaticResource enumDisplayConv}}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Label Content="長さ:" Grid.Column="0" Margin="0,3" />
                <ComboBox
                    ItemsSource="{Binding Source={StaticResource lipSpanRange}}"
                    SelectedValue="{Binding SpanRange}"
                    Margin="4,0,0,0"
                    Grid.Column="1" />
                <xctk:DecimalUpDown
                    Value="{Binding SpanValue}"
                    Minimum="{Binding MinSpanValue}"
                    Maximum="{Binding MaxSpanValue}"
                    Increment="{Binding SpanValueIncrement}"
                    FormatString="{Binding SpanValueFormat}"
                    Grid.Column="2" />
                <ComboBox
                    ItemsSource="{Binding Source={StaticResource lipSpanUnit}}"
                    SelectedValue="{Binding SpanUnit}"
                    Grid.Column="3" />
            </Grid>
            <Grid
                Visibility="{Binding
                    ElementName=root,
                    Path=IsFpsVisible,
                    Converter={StaticResource boolVisibiliyConv}}"
                Margin="0,4,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Label Content="FPS(_S):" Grid.Column="0" />
                <xctk:DecimalUpDown
                    Value="{Binding Fps}"
                    Minimum="{Binding MinFps}"
                    Maximum="{Binding MaxFps}"
                    Increment="1"
                    FormatString="0.###"
                    Margin="4,0,0,0"
                    Grid.Column="1" />
            </Grid>
        </WrapPanel>

        <xctk:DropDownButton
            Content="詳細設定(_D)"
            Visibility="{Binding IsDetailVisible, Converter={StaticResource boolVisibiliyConv}, ElementName=root}"
            Padding="8,2"
            Margin="0,8,0,0"
            HorizontalAlignment="Left"
            Grid.Row="11">
            <xctk:DropDownButton.DropDownContent>
                <Grid Margin="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="8" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <!-- row 0 -->
                    <Label
                        Content="口の開閉時間％(_L):"
                        Target="{Binding ElementName=upDownLinkLength}"
                        Grid.Row="0" Grid.Column="0" />
                    <xctk:DecimalUpDown
                        x:Name="upDownLinkLength"
                        Value="{Binding LinkLengthPercent}"
                        Minimum="{Binding MinLinkLengthPercent}"
                        Maximum="{Binding MaxLinkLengthPercent}"
                        Increment="5"
                        FormatString="0.###"
                        Margin="4,0,0,0"
                        Grid.Row="0" Grid.Column="1" />

                    <!-- row 2 -->
                    <Label
                        Content="長音終端ウェイト割合％(_W):"
                        Target="{Binding ElementName=upDownLongSound}"
                        Grid.Row="2" Grid.Column="0" />
                    <xctk:SingleUpDown
                        x:Name="upDownLongSound"
                        Value="{Binding LongSoundLastWeightPercent}"
                        Minimum="{Binding MinLongSoundLastWeightPercent}"
                        Maximum="{Binding MaxLongSoundLastWeightPercent}"
                        Increment="5"
                        FormatString="0.###"
                        Margin="4,0,0,0"
                        Grid.Row="2" Grid.Column="1" />

                    <!-- row 3 -->
                    <CheckBox
                        Content="&quot;え&quot; のモーフを &quot;あ&quot;+&quot;い&quot; に変換(_M)"
                        IsChecked="{Binding IsMorphEtoAI}"
                        Margin="0,8,0,0"
                        Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" />
                </Grid>
            </xctk:DropDownButton.DropDownContent>
        </xctk:DropDownButton>
    </Grid>
</UserControl>
